{
  pkgs,
  lib,
  config,
  ...
}:
with lib; let
  cfg = config.modules.windowmanager.i3;
  device = config.modules.device;
in {
  options.modules.windowmanager.i3 = {
    enable = mkEnableOption "i3";
    isDefault = mkEnableOption "set i3 as default display manager session";
  };

  config = mkMerge [
    (mkIf cfg.isDefault {
      services.xserver.displayManager.defaultSession = "none+i3";
    })
    (mkIf cfg.enable {
      modules.windowmanager.add-on.blueman-applet.enable = true;
      modules.windowmanager.add-on.dunst.enable = true;
      modules.windowmanager.add-on.nm-applet.enable = true;
      modules.windowmanager.add-on.rofi.enable = true;
      modules.windowmanager.add-on.picom.enable = true;
      modules.windowmanager.add-on.py3status.enable = true;
      modules.windowmanager.add-on.thunar.enable = true;
      modules.windowmanager.add-on.xdg.enable = true;

      modules.system.font.enable = true;
      modules.system.sound.enable = true;
      modules.system.video.enable = true;

      modules.terminal-emulator.kitty.enable = true;

      assertions = [
        {
          assertion = length device.monitors > 0;
          message = ''
            At least one monitor in the `config.modules.device.monitors` is
            needeed to use i3 module.
          '';
        }
      ];

      services.xserver = {
        enable = true;
        desktopManager = {
          xterm.enable = false;
          runXdgAutostartIfNone = true;
        };
        windowManager.i3 = {
          enable = true;
          package = pkgs.i3-gaps;
          extraPackages = with pkgs; [
            feh
            i3blocks
            autotiling
            numlockx
            picom
            polkit_gnome
            rofi
            scrot
            haskellPackages.greenclip
            (python3Packages.py3status.overrideAttrs (oldAttrs: {
              propagatedBuildInputs = with python3Packages; [pytz tzlocal] ++ oldAttrs.propagatedBuildInputs;
            }))
            xfce.xfce4-power-manager
          ];
        };
      };
      networking.networkmanager.enable = true;
      programs.dconf.enable = true;
      security.polkit.enable = true;

      home.manager = {
        xsession.windowManager.i3 = {
          enable = true;
          package = pkgs.i3-gaps;
          extraConfig = let
            lockExec = "${pkgs.i3lock}/bin/i3lock";
            terminal = "${pkgs.kitty}/bin/kitty";
            terminalExec = "${terminal} -e";
          in ''
            # This file has been auto-generated by i-3-config-wizard(1).
            # It will not be overwritten, so edit it as you like.
            #
            # Should you change your keyboard layout some time, delete
            # this file and re-run i3-config-wizard(1).
            #

            # i3 config file (v4)
            #
            # Please see https://i3wm.org/docs/userguide.html for a complete reference!

            ######################
            # => Basic config: ###
            ######################
            # Define names for default workspaces for which we configure key bindings later on.
            set $ws1 "1"
            set $ws2 "2"
            set $ws3 "3"
            set $ws4 "4"
            set $ws5 "5"
            set $ws6 "6"
            set $ws7 "7"
            set $ws8 "8"
            set $ws9 "9"
            set $ws10 "10"
            ##################
            # => Keybinds: ###
            ##################
            # Set $mod to Super/Windows Key
            set $mod Mod4

            # Use pactl to adjust volume in PulseAudio.
            bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
            bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
            bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
            bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

            bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause && $refresh_i3status

            # play pause keybind
            bindsym $mod+Ctrl+space exec playerctl play-pause

            # use brightnessctl to adjust brightness
            # bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set 5%+ && $refresh_i3status
            bindsym Ctrl+$mod+Shift+Up exec --no-startup-id brightnessctl set 5%+ && $refresh_i3status
            # bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%- && $refresh_i3status
            bindsym Ctrl+$mod+Shift+Down exec --no-startup-id brightnessctl set 5%- && $refresh_i3status

            # keybinding to lock screen
            bindsym $mod+l exec "${lockExec}"
            # alternatively use loginctl to auto-find best lock-screen
            # bindsym $mod+l exec "loginctl lock-session"

            # Kill focused window
            bindsym $mod+Shift+c kill

            # Open pulsemixer (console volume control) app
            bindsym $mod+Shift+F1 exec ${terminalExec} pulsemixer

            # Use Mouse+$mod to drag floating windows to their wanted position
            floating_modifier $mod

            # toggle touchpad 
            bindsym $mod+Ctrl+t exec ~/.scripts/github.com/noahdotpy/.dotfiles/toggle_touchpad.sh

            # Keybinds for opening apps
            # Open a terminal
            bindsym $mod+Return exec "nix run nixpkgs#$TERMINAL"
            # open default web browser
            bindsym $mod+b exec "$BROWSER"
            # open default editor
            bindsym $mod+e exec "${terminal} $EDITOR"
            # open default file firefox
            bindsym $mod+f exec "nautilus"
            # open system monitor (htop)
            bindsym $mod+Escape exec "${terminalExec} ${pkgs.htop}/bin/htop"
            # screenshot tool
            # menu
            bindsym Print exec ksnip
            # rectangular area
            bindsym $mod+Print exec ksnip -r
            # active window
            bindsym $mod+Shift+Print exec ksnip -a
            # fullscreen  
            bindsym $mod+Ctrl+Print exec ksnip -f

            # Rofi keybinds
            bindsym $mod+a exec "${pkgs.rofi}/bin/rofi -modi 'drun' -show drun -show-icons"
            # bindsym $mod+w exec "${pkgs.rofi}/bin/rofi -modi 'window' -show window -show-icons"
            bindsym $mod+d exec "${pkgs.rofi}/bin/rofi -modi 'combi' -show combi -show-icons"
            # clipboard Manager
            bindsym $mod+v exec "${pkgs.rofi}/bin/rofi -modi 'clipboard:${pkgs.haskellPackages.greenclip}/bin/greenclip print' -show clipboard -run-command '{cmd}'"
            # keybinding to open rofi-power-menu
            bindsym $mod+Shift+Escape exec "~/.scripts/github.com/noahdotpy/.dotfiles/rofi-powermenu.sh"
            # keybinding to open rofi emoji menu
            bindsym $mod+period exec "${pkgs.rofi}/bin/rofi -modi emoji -show emoji"

            # change focus
            # bindsym $mod+h focus left
            # bindsym $mod+j focus down
            # bindsym $mod+k focus up
            # bindsym $mod+l focus right

            bindsym $mod+Left focus left
            bindsym $mod+Down focus down
            bindsym $mod+Up focus up
            bindsym $mod+Right focus right

            # focus the parent container
            # bindsym $mod+a focus parent

            # focus the child container
            #bindsym $mod+d focus child

            # move focused window
            # bindsym $mod+Shift+h move left
            # bindsym $mod+Shift+j move down
            # bindsym $mod+Shift+k move up
            # bindsym $mod+Shift+l move right

            # alternatively, you can use the cursor keys:
            bindsym $mod+Shift+Left move left
            bindsym $mod+Shift+Down move down
            bindsym $mod+Shift+Up move up
            bindsym $mod+Shift+Right move right

            # split in vertical orientation
            bindsym $mod+Shift+v split h

            # split in horizontal orientation
            bindsym $mod+Shift+h split v

            # enter fullscreen mode for the focused container
            bindsym $mod+Shift+f fullscreen toggle

            # change container layout (stacked, tabbed, toggle split)
            bindsym $mod+Ctrl+s layout stacking
            bindsym $mod+Ctrl+w layout tabbed
            bindsym $mod+Ctrl+e layout toggle split

            # toggle tiling / floating
            bindsym $mod+Shift+space floating toggle

            # change focus between tiling / floating windows
            bindsym $mod+space focus mode_toggle

            # switch to workspace
            bindsym $mod+1 workspace number $ws1
            bindsym $mod+2 workspace number $ws2
            bindsym $mod+3 workspace number $ws3
            bindsym $mod+4 workspace number $ws4
            bindsym $mod+5 workspace number $ws5
            bindsym $mod+6 workspace number $ws6
            bindsym $mod+7 workspace number $ws7
            bindsym $mod+8 workspace number $ws8
            bindsym $mod+9 workspace number $ws9
            bindsym $mod+0 workspace number $ws10

            # move focused container to workspace
            bindsym $mod+Shift+1 move container to workspace number $ws1
            bindsym $mod+Shift+2 move container to workspace number $ws2
            bindsym $mod+Shift+3 move container to workspace number $ws3
            bindsym $mod+Shift+4 move container to workspace number $ws4
            bindsym $mod+Shift+5 move container to workspace number $ws5
            bindsym $mod+Shift+6 move container to workspace number $ws6
            bindsym $mod+Shift+7 move container to workspace number $ws7
            bindsym $mod+Shift+8 move container to workspace number $ws8
            bindsym $mod+Shift+9 move container to workspace number $ws9
            bindsym $mod+Shift+0 move container to workspace number $ws10

            # reload the configuration file
            bindsym $mod+Shift+Ctrl+r reload
            # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
            bindsym $mod+Shift+r restart
            # exit i3 (logs you out of your X session)
            # bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
            # using plasma's logout screen instead of i3's
            # bindsym $mod+Shift+e exec --no-startup-id qdbus-qt5 org.kde.ksmserver /KSMServer org.kde.KSMServerInterface.logout -1 -1 -1
            # resize window (you can also use the mouse for that)
            mode "resize" {
                    # These bindings trigger as soon as you enter the resize mode

                    # Pressing left will shrink the window’s width.
                    # Pressing right will grow the window’s width.
                    # Pressing up will shrink the window’s height.
                    # Pressing down will grow the window’s height.
                    bindsym h resize shrink width 5 px or 5 ppt
                    bindsym j resize grow height 5 px or 5 ppt
                    bindsym k resize shrink height 5 px or 5 ppt
                    bindsym l resize grow width 5 px or 5 ppt

                    # same bindings, but for the arrow keys
                    bindsym Left resize shrink width 5 px or 5 ppt
                    bindsym Down resize grow height 5 px or 5 ppt
                    bindsym Up resize shrink height 5 px or 5 ppt
                    bindsym Right resize grow width 5 px or 5 ppt

                    # back to normal: Enter or Escape or $mod+r
                    bindsym Return mode "default"
                    bindsym Escape mode "default"
                    bindsym $mod+r mode "default"
            }
            bindsym $mod+r mode "resize"

            ###################
            # => Eye candy: ###
            ###################
            # Font for window titles. Will also be used by the bar unless a different font
            # is used in the bar {} block below.
            # font pango:monospace 8
            # This font is widely installed, provides lots of unicode glyphs, right-to-left
            # text rendering and scalability on retina/hidpi displays (thanks to pango).
            font pango:DejaVu Sans Mono 8

            # class                 border  bground text    indicator child_border
            client.focused          #000000 #83CAFA #FFFFFF #83CAFA   #83CAFA
            client.focused_inactive #8C8C8C #4C4C4C #FFFFFF #4C4C4C   #8C8C8C
            client.unfocused        #000000 #222222 #888888 #292D2E   #000000
            client.urgent           #EC69A0 #DB3279 #FFFFFF #DB3279   #DB3279
            client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

            client.background       #FFFFFF
            client.focused           #9aa5ce #364A82 #c0caf5 #9aa5ce   #9aa5ce
            client.focused_inactive  #16161d #16161d #c0caf5 #16161d   #16161d
            client.unfocused         #16161d #16161d #c0caf5 #16161d   #16161d

            # Set inner/outer gaps
            gaps inner 6
            gaps outer -2

            bar {
                    status_command SCRIPT_DIR=~/.config/i3blocks/scripts i3blocks
            }

            # border/titlebar config
            default_border pixel 2
            default_floating_border pixel 2

            # force apps to have borders (mainly for GTK)
            for_window [class=.*] border pixel 2

            # Hides vertical and horizontal borders when there's only one window.
            hide_edge_borders both

            # start picom
            # exec ${pkgs.picom}/bin/picom -b

            # restore feh wallpaper
            exec_always ~/.fehbg

            #####################
            # => Peripherals: ###
            #####################
            exec xinput --set-prop 9 'libinput Accel Profile Enabled' 0, 1

            ########################
            # => Other settings: ###
            ########################
            # Start XDG autostart .desktop files using dex. See also
            # https://wiki.archlinux.org/index.php/XDG_Autostart
            # exec --no-startup-id dex-autostart --autostart --environment i3

            # The combination of xss-lock, nm-applet and pactl is a popular choice, so
            # they are included here as an example. Modify as you see fit.

            # xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
            # screen before suspend. Use loginctl lock-session to lock your screen.
            exec --no-startup-id xss-lock --transfer-sleep-lock -- ${lockExec}

            # auto-lock the screen after 3 minutes
            exec xautolock -detectsleep -time 15 -locker "${lockExec}"

            # NetworkManager is the most popular way to manage wireless networks on Linux,
            # and nm-applet is a desktop environment-independent system tray GUI for it.
            exec --no-startup-id nm-applet

            # bluetooth config
            exec --no-startup-id blueberry-tray

            exec --no-startup-id xdg-user-dirs-update

            exec --no-startup-id lxpolkit

            # exec dnfdragora-updater

            # autotiling for i3
            exec_always --no-startup-id ${pkgs.autotiling}/bin/autotiling

            # dunst notification daemon
            exec_always --no-startup-id "$HOME/.config/dunst/launch.sh"

            # Greenclip clipboard manager
            exec ${pkgs.haskellPackages.greenclip}/bin/greenclip daemon

            # emacs daemon
            exec /usr/bin/emacs --daemon

            # kdeconnect daemon
            exec --no-startup-id /usr/lib/kdeconnectd

            # mailspring (background for notifications)
            exec flatpak run com.getmailspring.Mailspring --background

            # automatically float these windows
            for_window [class="ksnip"] floating enable

            ###############
            # => Audio: ###
            ###############
            # Turn off system BEEP
            exec "xset b off"
            exec "xset b 0 0 0"

          '';
        };
      };
    })
  ];
}
